var _ = require('lodash');
var EventEmitter = require('events').EventEmitter;
var AppDispatcher = require('app/dispatchers/app-dispatcher');
var AppConstants = require('app/constants/app-constants');

var CHANGE_EVENT = 'change';

var _catalog = [];

_.times(9, function (i) {
    _catalog.push({
        id: 'Widget' + i,
        title: 'Widget #' + i,
        summary: 'This is awesome widget!',
        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus, commodi.',
        img: '/assets/product.png',
        cost: i
    });
});

var _cartItems = [];

function _removeItem (index) {
    _cartItems[index].inCart = false;
    _cartItems.splice(index, 1);
}

function _increaseItem (index) {
    _cartItems[index].qty++;
}

function _decreaserItem (index) {
    if (_cartItems[index].qty > 1) {
        _cartItems[index].qty--;
    } else {
        _removeItem(index);
    }
}

function _addItem (item) {
    if (!item.inCart) {
        item['qty'] = 1;
        item['inCart'] = true;
        _cartItems.push(item);
    } else {
        _cartItems.forEach(function (cartItem, i) {
            if (cartItem.id === item.id) {
                _increaseItem(i);
            }
        });
    }
}

var AppStore = _.extend({}, EventEmitter.prototype, {
    emitChange: function () {
        this.emit(CHANGE_EVENT);
    },

    addChangeListener: function (callback) {
        this.on(CHANGE_EVENT, callback);
    },

    removeChangeListener: function (callback) {
        this.removeListener(CHANGE_EVENT, callback);
    },

    getCart: function () {
        return _cartItems;
    },

     getCatalog: function (){
         return _catalog;
     },

    dispatcherIndex: AppDispatcher.register(function (payload) {
        var action = payload.action;

        switch (action.actionType) {
        case AppConstants.ADD_ITEM:
            _addItem(payload.action.item);
            break;
            
        case AppConstants.REMOVE_ITEM:
            _removeItem(payload.action.index);
            break;

        case AppConstants.INCREASE_ITEM:
            _increaseItem(payload.action.index);
            break;

        case AppConstants.DECREASE_ITEM:
            _decreaserItem(payload.action.index);
            break;
        }

        AppStore.emitChange();

        return true;
    })
});

module.exports = AppStore;
